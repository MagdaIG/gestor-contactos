<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contactos - Mi Agenda</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header de la aplicación -->
    <header class="app-header">
        <div class="header-content">
            <div class="app-title">
                <h1>CONTACT LIST</h1>
            </div>
            <div class="header-actions">
                <button class="action-btn search-btn" onclick="toggleSearch()" title="Buscar contactos">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="11" cy="11" r="8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="m21 21-4.35-4.35" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </button>
                <a href="/nuevo" class="action-btn add-btn" title="Agregar nuevo contacto">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <line x1="12" y1="5" x2="12" y2="19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="5" y1="12" x2="19" y2="12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </a>
            </div>
        </div>
    </header>

    <!-- Barra de búsqueda (inicialmente oculta) -->
    <div class="search-bar" id="searchBar" style="display: none;">
        <form action="/buscar" method="GET" class="search-form">
            <div class="search-input-container">
                <input
                    type="text"
                    name="q"
                    placeholder="Buscar contactos..."
                    class="search-input"
                    value="<%= typeof terminoBusqueda !== 'undefined' ? terminoBusqueda : '' %>"
                >
                <button type="submit" class="search-submit-btn">
                    <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="11" cy="11" r="8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="m21 21-4.35-4.35" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </button>
            </div>
        </form>
    </div>

    <!-- Contenido principal -->
    <main class="app-main">
        <div class="container">
            <!-- Alfabeto -->
            <div class="alphabet-section">
                <div class="alphabet-container">
                    <!-- Botón Ver Todos -->
                    <div class="alphabet-controls">
                        <button
                            class="alphabet-letter view-all-btn <%= !letraActiva ? 'active' : '' %>"
                            onclick="viewAllContacts()"
                            title="Ver todos los contactos"
                        >
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M17 21V19C17 17.9391 16.5786 16.9217 15.8284 16.1716C15.0783 15.4214 14.0609 15 13 15H5C3.93913 15 2.92172 15.4214 2.17157 16.1716C1.42143 16.9217 1 17.9391 1 19V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <circle cx="9" cy="7" r="4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <path d="M23 21V19C23 18.1645 22.7155 17.3541 22.2094 16.6977C21.7033 16.0413 20.9999 15.5754 20.2 15.3669" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <path d="M16 3.13C16.8604 3.35031 17.623 3.85071 18.1676 4.55232C18.7122 5.25392 19.0078 6.11683 19.0078 7.005C19.0078 7.89318 18.7122 8.75608 18.1676 9.45769C17.623 10.1593 16.8604 10.6597 16 10.88" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            TODOS
                        </button>
                    </div>

                    <div class="alphabet-row">
                        <%
                        const alfabeto = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M'];
                        alfabeto.forEach(letra => {
                            const tieneContactos = letrasDisponibles.includes(letra);
                            const esActiva = letraActiva === letra;
                        %>
                            <button
                                class="alphabet-letter <%= esActiva ? 'active' : '' %> <%= tieneContactos ? 'available' : 'unavailable' %>"
                                onclick="filterByLetter('<%= letra %>')"
                                <%= !tieneContactos ? 'disabled' : '' %>
                            >
                                <%= letra %>
                            </button>
                        <% }); %>
                    </div>
                    <div class="alphabet-row">
                        <%
                        const alfabeto2 = ['N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
                        alfabeto2.forEach(letra => {
                            const tieneContactos = letrasDisponibles.includes(letra);
                            const esActiva = letraActiva === letra;
                        %>
                            <button
                                class="alphabet-letter <%= esActiva ? 'active' : '' %> <%= tieneContactos ? 'available' : 'unavailable' %>"
                                onclick="filterByLetter('<%= letra %>')"
                                <%= !tieneContactos ? 'disabled' : '' %>
                            >
                                <%= letra %>
                            </button>
                        <% }); %>
                    </div>
                </div>
            </div>

            <!-- Lista de contactos -->
            <div class="contacts-section">
                <% if (contactos && contactos.length > 0) { %>
                    <div class="contacts-grid">
                        <%
                        const coloresPasteles = [
                            '#FFB3BA', '#FFDFBA', '#FFFFBA', '#BAFFC9',
                            '#BAE1FF', '#E1BAFF', '#FFBAE1', '#FFE1BA',
                            '#B3FFBA', '#BAFFE1', '#E1FFBA', '#FFE1B3',
                            '#BAE1E1', '#E1BAE1', '#FFB3E1', '#B3E1FF'
                        ];
                        contactos.forEach((contacto, index) => {
                            const color = contacto.color || coloresPasteles[index % coloresPasteles.length];
                        %>
                            <div class="contact-card" data-contact-id="<%= contacto.id %>" style="background-color: <%= color %>">
                                    <div class="contact-header">
                                        <div class="contact-avatar">
                                            <img src="/images/contact.png" alt="Avatar de contacto" class="avatar-image">
                                        </div>
                                        <div class="contact-info">
                                            <div class="contact-name-row">
                                                <h3 class="contact-name">NAME:</h3>
                                                <% if (contacto.emoticon && contacto.emoticon.trim() !== '') { %>
                                                    <div class="contact-emoticon-circle">
                                                        <span class="contact-emoticon"><%= contacto.emoticon %></span>
                                                    </div>
                                                <% } %>
                                            </div>
                                            <p class="contact-value"><%= contacto.nombre %></p>
                                        </div>
                                        <div class="contact-actions">
                                        <button class="action-icon favorite-btn" onclick="toggleFavorite(<%= contacto.id %>)" title="Marcar como favorito">
                                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                        </button>
                                        <button class="action-icon edit-btn" onclick="editContact(<%= contacto.id %>)" title="Editar contacto">
                                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <path d="m18.5 2.5 3 3L12 15l-4 1 1-4 9.5-9.5z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                        </button>
                                        <button class="action-icon delete-btn" onclick="deleteContact(<%= contacto.id %>, '<%= contacto.nombre %>')" title="Eliminar contacto">
                                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <polyline points="3,6 5,6 21,6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <path d="m19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <line x1="10" y1="11" x2="10" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <line x1="14" y1="11" x2="14" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                        </button>
                                    </div>
                                </div>

                                <div class="contact-details">
                                    <div class="contact-detail">
                                        <span class="detail-label">PHONE:</span>
                                        <span class="detail-value"><%= contacto.telefono %></span>
                                    </div>
                                        <div class="contact-detail">
                                            <span class="detail-label">EMAIL:</span>
                                            <span class="detail-value"><%= contacto.email %></span>
                                        </div>
                                    <div class="contact-detail">
                                        <span class="detail-label">ADDRESS:</span>
                                        <span class="detail-value">Dirección no disponible</span>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="empty-state">
                        <div class="empty-animation">
                            <svg width="80" height="80" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <circle cx="12" cy="7" r="4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </div>
                        <h3>No hay contactos</h3>
                        <p>Comienza agregando tu primer contacto</p>
                        <a href="/nuevo" class="btn btn-primary">
                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <line x1="12" y1="5" x2="12" y2="19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <line x1="5" y1="12" x2="19" y2="12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Agregar Primer Contacto
                        </a>
                    </div>
                <% } %>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="app-footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-info">
                    <h4>Magdalena Inalaf</h4>
                    <p>Desarrolladora Full Stack</p>
                </div>
                <div class="footer-links">
                    <a href="https://github.com/MagdaIG" target="_blank" rel="noopener noreferrer" class="footer-link">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        GitHub
                    </a>
                    <a href="https://www.linkedin.com/in/minalaf/" target="_blank" rel="noopener noreferrer" class="footer-link">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <rect x="2" y="9" width="4" height="12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <circle cx="4" cy="4" r="2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        LinkedIn
                    </a>
                    <a href="https://inalaf.ca/" target="_blank" rel="noopener noreferrer" class="footer-link">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M2 12h20" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        Web
                    </a>
                    <a href="mailto:magda.inalaf@gmail.com" class="footer-link">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <polyline points="22,6 12,13 2,6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        Email
                    </a>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2024 Contact List. Desarrollado con Node.js y Express por Magdalena Inalaf.</p>
            </div>
        </div>
    </footer>

    <!-- Formulario oculto para eliminar contactos -->
    <form id="deleteForm" action="" method="POST" style="display: none;">
    </form>

    <!-- Modal de alertas -->
    <div id="alertModal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-icon" id="modalIcon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="m9 12 2 2 4-4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <h3 id="modalTitle">Éxito</h3>
            </div>
            <div class="modal-body">
                <p id="modalMessage">Operación completada exitosamente</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" onclick="closeModal()">Aceptar</button>
            </div>
        </div>
    </div>

    <!-- Modal de confirmación -->
    <div id="confirmModal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-icon warning">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="9" x2="12" y2="13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="12" y1="17" x2="12.01" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <h3>Confirmar Acción</h3>
            </div>
            <div class="modal-body">
                <p id="confirmMessage">¿Estás seguro de que quieres realizar esta acción?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" onclick="closeConfirmModal()">Cancelar</button>
                <button class="btn btn-danger" id="confirmButton">Confirmar</button>
            </div>
        </div>
    </div>

    <script src="/js/app.js"></script>
    <script>
        // Mostrar alertas como modales
        <% if (typeof message !== 'undefined' && message) { %>
            showAlert('Información', '<%= message %>', 'info');
        <% } %>

        <% if (typeof error !== 'undefined' && error) { %>
            showAlert('Error', '<%= error %>', 'error');
        <% } %>

        function toggleSearch() {
            const searchBar = document.getElementById('searchBar');
            const searchInput = searchBar.querySelector('.search-input');

            if (searchBar.style.display === 'none' || searchBar.style.display === '') {
                searchBar.style.display = 'block';
                setTimeout(() => {
                    searchInput.focus();
                }, 100);
            } else {
                searchBar.style.display = 'none';
            }
        }

        function filterByLetter(letter) {
            window.location.href = `/letra/${letter}`;
        }

        function viewAllContacts() {
            window.location.href = '/';
        }

        function editContact(id) {
            window.location.href = `/editar/${id}`;
        }

        function deleteContact(id, name) {
            showConfirmModal(
                'Eliminar Contacto',
                `¿Estás seguro de que quieres eliminar el contacto "${name}"? Esta acción no se puede deshacer.`,
                () => {
                    const form = document.getElementById('deleteForm');
                    form.action = `/eliminar/${id}`;
                    form.submit();
                }
            );
        }

        function toggleFavorite(id) {
            const favoriteBtn = document.querySelector(`[onclick="toggleFavorite(${id})"]`);
            const isFavorited = favoriteBtn.classList.contains('favorited');

            if (isFavorited) {
                favoriteBtn.classList.remove('favorited');
                favoriteBtn.querySelector('svg path').setAttribute('fill', 'none');
                showAlert('Favorito Removido', 'El contacto ha sido removido de favoritos', 'info');
            } else {
                favoriteBtn.classList.add('favorited');
                favoriteBtn.querySelector('svg path').setAttribute('fill', 'currentColor');
                showAlert('Favorito Agregado', 'El contacto ha sido marcado como favorito', 'success');
            }
        }

        function showAlert(title, message, type = 'success') {
            const modal = document.getElementById('alertModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalMessage = document.getElementById('modalMessage');
            const modalIcon = document.getElementById('modalIcon');

            modalTitle.textContent = title;
            modalMessage.textContent = message;

            // Cambiar icono según el tipo
            if (type === 'error') {
                modalIcon.innerHTML = `
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="15" y1="9" x2="9" y2="15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="9" y1="9" x2="15" y2="15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                `;
                modalIcon.className = 'modal-icon error';
            } else if (type === 'info') {
                modalIcon.innerHTML = `
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M12 16v-4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M12 8h.01" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                `;
                modalIcon.className = 'modal-icon info';
            } else {
                modalIcon.innerHTML = `
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="m9 12 2 2 4-4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                `;
                modalIcon.className = 'modal-icon success';
            }

            modal.style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('alertModal').style.display = 'none';
        }

        function showConfirmModal(title, message, onConfirm) {
            const modal = document.getElementById('confirmModal');
            const modalTitle = modal.querySelector('.modal-header h3');
            const modalMessage = document.getElementById('confirmMessage');
            const confirmButton = document.getElementById('confirmButton');

            modalTitle.textContent = title;
            modalMessage.textContent = message;

            // Remover listeners anteriores
            confirmButton.replaceWith(confirmButton.cloneNode(true));
            const newConfirmButton = document.getElementById('confirmButton');

            newConfirmButton.addEventListener('click', () => {
                closeConfirmModal();
                onConfirm();
            });

            modal.style.display = 'flex';
        }

        function closeConfirmModal() {
            document.getElementById('confirmModal').style.display = 'none';
        }

        // Cerrar modales al hacer clic fuera
        window.addEventListener('click', function(event) {
            const alertModal = document.getElementById('alertModal');
            const confirmModal = document.getElementById('confirmModal');

            if (event.target === alertModal) {
                closeModal();
            }
            if (event.target === confirmModal) {
                closeConfirmModal();
            }
        });

        // Animaciones de entrada para las tarjetas
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.contact-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.3s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 50);
            });
        });
    </script>
</body>
</html>
