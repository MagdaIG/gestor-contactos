<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= contacto ? 'Editar Contacto' : 'Nuevo Contacto' %> - Mi Agenda</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Header de la aplicación -->
    <header class="app-header">
        <div class="header-content">
            <div class="app-title">
                <div class="app-icon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <circle cx="12" cy="7" r="4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <h1><%= contacto ? 'Editar Contacto' : 'Nuevo Contacto' %></h1>
            </div>
            <div class="header-actions">
                <a href="/" class="action-btn back-btn" title="Volver a contactos">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M19 12H5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="m12 19-7-7 7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </a>
            </div>
        </div>
    </header>

    <!-- Contenido principal -->
    <main class="app-main">
        <div class="container">
            <div class="form-container">
                <div class="form-header">
                    <h2><%= contacto ? 'Editar Contacto' : 'Agregar Nuevo Contacto' %></h2>
                    <p><%= contacto ? 'Modifica la información del contacto' : 'Completa los datos del nuevo contacto' %></p>
                </div>

                <form action="<%= action %>" method="<%= method %>" class="contact-form" id="contactForm">
                        <!-- Sección de imagen, color y emoticón -->
                        <div class="form-section-header">
                            <div class="contact-preview-form">
                                <div class="preview-avatar-form">
                                    <img src="/images/contact.png" alt="Avatar de contacto" class="preview-avatar-image" id="previewAvatarImage">
                                </div>
                                <div class="form-selectors">
                                    <div class="color-selector">
                                        <label class="form-label">
                                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <path d="M8.5 12L10.5 14L15.5 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                            Color de la tarjeta:
                                        </label>
                                        <div class="color-palette">
                                            <%
                                            const coloresPasteles = [
                                                '#FFB3BA', '#FFDFBA', '#FFFFBA', '#BAFFC9', '#BAE1FF',
                                                '#E1BAFF', '#FFBAE1', '#FFE1BA', '#B3FFBA', '#BAFFE1',
                                                '#E1FFBA', '#FFE1B3', '#BAE1E1', '#E1BAE1', '#FFB3E1'
                                            ];
                                            coloresPasteles.forEach((color, index) => {
                                                const isSelected = contacto && contacto.color === color;
                                            %>
                                                <button
                                                    type="button"
                                                    class="color-option <%= isSelected ? 'selected' : '' %>"
                                                    style="background-color: <%= color %>"
                                                    data-color="<%= color %>"
                                                    onclick="selectColor('<%= color %>')"
                                                    title="Color <%= index + 1 %>"
                                                ></button>
                                            <% }); %>
                                        </div>
                                        <input type="hidden" id="colorSeleccionado" name="color" value="<%= contacto ? contacto.color || '#FFB3BA' : '#FFB3BA' %>">
                                    </div>

                                    <div class="emoticon-selector">
                                        <label class="form-label">
                                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <path d="M8 14s1.5 2 4 2 4-2 4-2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <line x1="9" y1="9" x2="9.01" y2="9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                <line x1="15" y1="9" x2="15.01" y2="9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                            Emoticon del contacto:
                                        </label>
                                        <div class="emoticon-palette">
                                            <%
                                            const emoticones = ['', '🥰', '🤡', '☠️', '🤬', '👄', '👣', '🐷', '❤️', '💔', '🌸'];
                                            emoticones.forEach((emoticon, index) => {
                                                const isSelected = contacto && contacto.emoticon === emoticon;
                                                const displayText = emoticon === '' ? 'Sin emoticon' : emoticon;
                                            %>
                                                <button
                                                    type="button"
                                                    class="emoticon-option <%= isSelected ? 'selected' : '' %> <%= emoticon === '' ? 'no-emoticon' : '' %>"
                                                    data-emoticon="<%= emoticon %>"
                                                    onclick="selectEmoticon('<%= emoticon %>')"
                                                    title="<%= emoticon === '' ? 'Sin emoticon' : 'Emoticon ' + index %>"
                                                ><%= displayText %></button>
                                            <% }); %>
                                        </div>
                                        <input type="hidden" id="emoticonSeleccionado" name="emoticon" value="<%= contacto ? contacto.emoticon || '' : '' %>">
                                    </div>
                                </div>
                            </div>
                        </div>

                    <div class="form-group">
                        <label for="nombre" class="form-label">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <circle cx="12" cy="7" r="4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Nombre Completo
                        </label>
                        <input
                            type="text"
                            id="nombre"
                            name="nombre"
                            class="form-input"
                            placeholder="Ingresa el nombre completo"
                            value="<%= contacto ? contacto.nombre : '' %>"
                            required
                        >
                    </div>

                    <div class="form-group">
                        <label for="telefono" class="form-label">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Teléfono
                        </label>
                        <input
                            type="tel"
                            id="telefono"
                            name="telefono"
                            class="form-input"
                            placeholder="Ej: 555-1234"
                            value="<%= contacto ? contacto.telefono : '' %>"
                            required
                        >
                    </div>

                    <div class="form-group">
                        <label for="email" class="form-label">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <polyline points="22,6 12,13 2,6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Correo Electrónico
                        </label>
                        <input
                            type="email"
                            id="email"
                            name="email"
                            class="form-input"
                            placeholder="ejemplo@email.com"
                            value="<%= contacto ? contacto.email : '' %>"
                            required
                        >
                    </div>

                    <div class="form-group">
                        <label for="cumpleanos" class="form-label">
                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <rect x="3" y="4" width="18" height="18" rx="2" ry="2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <line x1="16" y1="2" x2="16" y2="6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <line x1="8" y1="2" x2="8" y2="6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <line x1="3" y1="10" x2="21" y2="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Fecha de Cumpleaños (opcional)
                        </label>
                        <input
                            type="text"
                            id="cumpleanos"
                            name="cumpleanos"
                            class="form-input"
                            placeholder="DD/MM (ej: 15/03)"
                            value="<%= contacto ? contacto.cumpleanos : '' %>"
                            pattern="[0-9]{2}/[0-9]{2}"
                            title="Formato: DD/MM (ej: 15/03)"
                        >
                        <small class="form-help">Formato: DD/MM (día/mes)</small>
                    </div>

                    <div class="form-group">
                        <label for="evento" class="form-label">
                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <polyline points="12,6 12,12 16,14" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Próximo Evento (opcional)
                        </label>
                        <div class="evento-inputs">
                            <select id="tipoEvento" name="tipoEvento" class="form-select">
                                <option value="">Seleccionar tipo de evento</option>
                                <option value="Llamada" <%= contacto && contacto.tipoEvento === 'Llamada' ? 'selected' : '' %>>Llamada</option>
                                <option value="Reunión" <%= contacto && contacto.tipoEvento === 'Reunión' ? 'selected' : '' %>>Reunión</option>
                                <option value="Cita" <%= contacto && contacto.tipoEvento === 'Cita' ? 'selected' : '' %>>Cita</option>
                                <option value="Evento" <%= contacto && contacto.tipoEvento === 'Evento' ? 'selected' : '' %>>Evento</option>
                            </select>
                            <input
                                type="date"
                                id="fechaEvento"
                                name="fechaEvento"
                                class="form-input"
                                value="<%= contacto ? contacto.fechaEvento : '' %>"
                            >
                        </div>
                        <small class="form-help">Selecciona el tipo de evento y la fecha</small>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">
                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <polyline points="17,21 17,13 7,13 7,21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <polyline points="7,3 7,8 15,8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <%= contacto ? 'Actualizar Contacto' : 'Guardar Contacto' %>
                        </button>
                        <a href="/" class="btn btn-secondary">
                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M19 12H5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <path d="m12 19-7-7 7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Cancelar
                        </a>
                    </div>
                </form>
            </div>

            <!-- Vista previa del contacto -->
            <div class="preview-section">
                <h3>Vista Previa</h3>
                <div class="contacto-preview">
                    <div class="preview-avatar">
                        <span id="preview-initial">?</span>
                    </div>
                    <div class="preview-info">
                        <h4 id="preview-nombre">Nombre del contacto</h4>
                        <p id="preview-telefono">Teléfono</p>
                        <p id="preview-email">Email</p>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="app-footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-info">
                    <h4>Magdalena Inalaf</h4>
                    <p>Desarrolladora Full Stack</p>
                </div>
                <div class="footer-links">
                    <a href="https://github.com/MagdaIG" target="_blank" rel="noopener noreferrer" class="footer-link">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        GitHub
                    </a>
                    <a href="https://www.linkedin.com/in/minalaf/" target="_blank" rel="noopener noreferrer" class="footer-link">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <rect x="2" y="9" width="4" height="12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <circle cx="4" cy="4" r="2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        LinkedIn
                    </a>
                    <a href="https://inalaf.ca/" target="_blank" rel="noopener noreferrer" class="footer-link">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M2 12h20" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        Web
                    </a>
                    <a href="mailto:magda.inalaf@gmail.com" class="footer-link">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <polyline points="22,6 12,13 2,6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        Email
                    </a>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2024 Contact List. Desarrollado con Node.js y Express por Magdalena Inalaf.</p>
            </div>
        </div>
    </footer>

    <!-- Modal de alertas -->
    <div id="alertModal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-icon" id="modalIcon">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="m9 12 2 2 4-4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </div>
                <h3 id="modalTitle">Éxito</h3>
            </div>
            <div class="modal-body">
                <p id="modalMessage">Operación completada exitosamente</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" onclick="closeModal()">Aceptar</button>
            </div>
        </div>
    </div>

    <script src="/js/app.js"></script>
    <script>
        // Función para inicializar la vista previa en tiempo real
        function initPreview() {
            const nombreInput = document.getElementById('nombre');
            const telefonoInput = document.getElementById('telefono');
            const emailInput = document.getElementById('email');

            const previewNombre = document.getElementById('preview-nombre');
            const previewTelefono = document.getElementById('preview-telefono');
            const previewEmail = document.getElementById('preview-email');
            const previewInitial = document.getElementById('preview-initial');

            if (!nombreInput || !previewNombre) return;

            // Actualizar vista previa en tiempo real
            function updatePreview() {
                const nombre = nombreInput.value.trim();
                const telefono = telefonoInput.value.trim();
                const email = emailInput.value.trim();

                // Actualizar nombre
                previewNombre.textContent = nombre || 'Nombre del contacto';

                // Actualizar inicial
                previewInitial.textContent = nombre ? nombre.charAt(0).toUpperCase() : '?';

                // Actualizar teléfono
                previewTelefono.textContent = telefono || 'Teléfono';

                // Actualizar email
                previewEmail.textContent = email || 'Email';
            }

            // Agregar event listeners
            nombreInput.addEventListener('input', updatePreview);
            telefonoInput.addEventListener('input', updatePreview);
            emailInput.addEventListener('input', updatePreview);

            // Actualizar vista previa inicial
            updatePreview();
        }

        function showAlert(title, message, type = 'success') {
            const modal = document.getElementById('alertModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalMessage = document.getElementById('modalMessage');
            const modalIcon = document.getElementById('modalIcon');

            modalTitle.textContent = title;
            modalMessage.textContent = message;

            // Cambiar icono según el tipo
            if (type === 'error') {
                modalIcon.innerHTML = `
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="15" y1="9" x2="9" y2="15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <line x1="9" y1="9" x2="15" y2="15" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                `;
                modalIcon.className = 'modal-icon error';
            } else {
                modalIcon.innerHTML = `
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="m9 12 2 2 4-4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                `;
                modalIcon.className = 'modal-icon success';
            }

            modal.style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('alertModal').style.display = 'none';
        }

        // Cerrar modal al hacer clic fuera
        window.addEventListener('click', function(event) {
            const alertModal = document.getElementById('alertModal');
            if (event.target === alertModal) {
                closeModal();
            }
        });

            // Función para seleccionar color
            function selectColor(color) {
                // Remover selección anterior
                document.querySelectorAll('.color-option').forEach(option => {
                    option.classList.remove('selected');
                });

                // Agregar selección al color elegido
                document.querySelector(`[data-color="${color}"]`).classList.add('selected');

                // Actualizar el input hidden
                document.getElementById('colorSeleccionado').value = color;

                // Actualizar la vista previa de la tarjeta
                updateCardPreview(color);
            }

            // Función para seleccionar emoticon
            function selectEmoticon(emoticon) {
                // Remover selección anterior
                document.querySelectorAll('.emoticon-option').forEach(option => {
                    option.classList.remove('selected');
                });

                // Agregar selección al emoticon elegido
                document.querySelector(`[data-emoticon="${emoticon}"]`).classList.add('selected');

                // Actualizar el input hidden
                document.getElementById('emoticonSeleccionado').value = emoticon;
            }

        // Función para actualizar la vista previa de la tarjeta
        function updateCardPreview(color) {
            const previewCard = document.querySelector('.contacto-preview');
            if (previewCard) {
                previewCard.style.backgroundColor = color;
            }
        }

        // Inicializar vista previa cuando se carga la página
        document.addEventListener('DOMContentLoaded', function() {
            initPreview();

            // Inicializar color seleccionado
            const colorInicial = document.getElementById('colorSeleccionado').value;
            if (colorInicial) {
                updateCardPreview(colorInicial);
            }
        });

        // Validación del formulario
        document.getElementById('contactForm').addEventListener('submit', function(e) {
            const nombre = document.getElementById('nombre').value.trim();
            const telefono = document.getElementById('telefono').value.trim();
            const email = document.getElementById('email').value.trim();

            if (!nombre || !telefono || !email) {
                e.preventDefault();
                showAlert('Error', 'Todos los campos son obligatorios', 'error');
                return false;
            }

            // Validar formato de email básico
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                e.preventDefault();
                showAlert('Error', 'Por favor, ingresa un email válido', 'error');
                return false;
            }

            // Validar formato de teléfono básico
            const phoneRegex = /^[\d\s\-\+\(\)]+$/;
            if (!phoneRegex.test(telefono)) {
                e.preventDefault();
                showAlert('Error', 'Por favor, ingresa un teléfono válido', 'error');
                return false;
            }
        });
    </script>
</body>
</html>
